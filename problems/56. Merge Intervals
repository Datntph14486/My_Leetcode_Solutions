/**
 * @param {number[][]} intervals
 * @return {number[][]}
 */
var merge = function (intervals) {
    const result = [];

    intervals.sort((a, b) => a[0] - b[0]);

    for (let i = 0; i < intervals.length; i++) {

        if (result.length == 0) {
            result.push(intervals[i]);
            continue;
        }
        const startNumber = result[result.length - 1][0];
        const endNumber = result[result.length - 1][1];

        const currentStartNumber = intervals[i][0];
        const currentEndNumber = intervals[i][1];

        if (currentStartNumber < startNumber) {
            result[result.length - 1][0] = currentStartNumber;
        }

        if (currentStartNumber <= endNumber && endNumber <= currentEndNumber) {
            result[result.length - 1][1] = currentEndNumber;
        }

        if (endNumber < currentStartNumber) {
            result.push(intervals[i]);
        }

    };

    return result;


};
